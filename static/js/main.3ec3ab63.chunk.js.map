{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/Errorboundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","id","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","Searchbox","searchChange","searchfield","type","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","_this$state","filteredRobots","filter","toLowerCase","includes","length","components_Searchbox","components_Scroll","components_Errorboundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.3ec3ab63.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, id, email}) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h2>{email}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchChange, searchfield}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" onChange={searchChange} />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass Errorboundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooooops, something error happened!</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default Errorboundry;","import React, {Component} from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport Errorboundry from '../components/Errorboundry';\r\nimport './App.css';\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '', \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(user => this.setState({robots: user}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n    render(){\r\n\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return (!robots.length) ? <h1 className=\"tc\">Loading</h1> :          \r\n        (\r\n            <div className=\"tc\">\r\n                <h1>Robofriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <Errorboundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Errorboundry>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />,\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}